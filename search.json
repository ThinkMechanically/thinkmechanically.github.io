[
  {
    "objectID": "listTools.html",
    "href": "listTools.html",
    "title": "List of Tools",
    "section": "",
    "text": "Includes tools to evaluate sizing duct for an entire system. I recommend you explore using the individual tools below before you dive into performing all of the sizing in one page in this calculator. However, once you understand the individual tools this is useful for evaluating all of the connections at a new install or equipment replacement when necessary\n\n\n\nQuickly see if a system filter is large enough and estimate the pressure drop of an installed filter\n\n\n\nQuickly see if a system return trunk(s) is large enough to accomodate the necessary airflow\n\n\n\nQuickly see if a system supply trunk(s) is large enough to accomodate the necessary airflow\n\n\n\nEvaluate if a branch duct is large enough to supply the correct amount of air, or determine what size branch duct you should use for a given cfm",
    "crumbs": [
      "Home",
      "Tools"
    ]
  },
  {
    "objectID": "listTools.html#tools-and-calculators-on-this-website",
    "href": "listTools.html#tools-and-calculators-on-this-website",
    "title": "List of Tools",
    "section": "",
    "text": "Includes tools to evaluate sizing duct for an entire system. I recommend you explore using the individual tools below before you dive into performing all of the sizing in one page in this calculator. However, once you understand the individual tools this is useful for evaluating all of the connections at a new install or equipment replacement when necessary\n\n\n\nQuickly see if a system filter is large enough and estimate the pressure drop of an installed filter\n\n\n\nQuickly see if a system return trunk(s) is large enough to accomodate the necessary airflow\n\n\n\nQuickly see if a system supply trunk(s) is large enough to accomodate the necessary airflow\n\n\n\nEvaluate if a branch duct is large enough to supply the correct amount of air, or determine what size branch duct you should use for a given cfm",
    "crumbs": [
      "Home",
      "Tools"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "0 - Website Repository Folder",
    "section": "",
    "text": "This website is a place to find as much information as I can on HVAC, with a focus on filter and duct sizing, as well as upcoming information on plumbing, gas, and anything else related to the mechanical trades.\n\n\nThere is still a lot of work to do but use the navigation bar to the left to see anything that is completed or otherwise currently available.\nThank you to the community, developers, and staff at Posit and of Quarto for helping me to make building this website possible. Also, a particular thanks to the team involved with Observable JS for that framework which made the inputs and javascript simpler to create - without which these calculators and diagrams may have never been completed",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#welcome-to-thinking-mechanically",
    "href": "index.html#welcome-to-thinking-mechanically",
    "title": "0 - Website Repository Folder",
    "section": "",
    "text": "This website is a place to find as much information as I can on HVAC, with a focus on filter and duct sizing, as well as upcoming information on plumbing, gas, and anything else related to the mechanical trades.\n\n\nThere is still a lot of work to do but use the navigation bar to the left to see anything that is completed or otherwise currently available.\nThank you to the community, developers, and staff at Posit and of Quarto for helping me to make building this website possible. Also, a particular thanks to the team involved with Observable JS for that framework which made the inputs and javascript simpler to create - without which these calculators and diagrams may have never been completed",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The purpose of this site is to provide access to information I have gathered over the years concerning the mechanical trades, Plumbing, HVAC, electrical, and other various bits of information. I do my best to focus on novel ideas and hard to find information. I also try to maintain a list of particularly good resources for information that have helped me over the years.\nThe idea of “thinking mechanically” is to think about how things work and how to approach systems with a solid base of understanding. Exemplified in ideas such as my lesson on “There’s no Suct Thing as Cold.” It’s, obviously, not a new concept, but one that I think often gets missed in one way or another in many teaching and course programs. “Thinking mechanically” is a skill that took me a very long time to build, where for some people it comes naturally. But it involves everything from understanding the physics of the environment your manipulating to how fast you drill a hole into metal or wood and why, to how fluid movement works in pipes and ducts, etc.\nMy goal is to provide the resources to build this foundation for others. So that, if you come across new problems it doesn’t feel like you’re in the dark as to where to start. If you can look at the system, understand how it works, you can easily picture what is happening and how to approach solving whatever you’re working on.\nMany textbooks try to cover the “fundamentals” of many aspects of the trade, but do so in a way where instead of explaining the basics of, for example, heat loss and how that affects occupant comfort and load calculations and how to identify issues, instead tend to focus on conduction, convection, radiation, and just the fact these types of heat transfer exist.\nI have taught in programs where the building of knowledge in different areas of the trade happen almost schizophrenically instead of a slow building of one idea after another. This is why, in my teaching career, I always preferred teaching in an environment where I could create and direct my own coursework instead of utilizing boiler plate solutions. Any boilerplate is flawed by its nature. While some subjects can be moved around as necessary, many things when learning the trades have to be built upon earlier ideas, very carefully, if a comprehensive understanding is going to have a good foundation.",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "about.html#about-the-site",
    "href": "about.html#about-the-site",
    "title": "About",
    "section": "",
    "text": "The purpose of this site is to provide access to information I have gathered over the years concerning the mechanical trades, Plumbing, HVAC, electrical, and other various bits of information. I do my best to focus on novel ideas and hard to find information. I also try to maintain a list of particularly good resources for information that have helped me over the years.\nThe idea of “thinking mechanically” is to think about how things work and how to approach systems with a solid base of understanding. Exemplified in ideas such as my lesson on “There’s no Suct Thing as Cold.” It’s, obviously, not a new concept, but one that I think often gets missed in one way or another in many teaching and course programs. “Thinking mechanically” is a skill that took me a very long time to build, where for some people it comes naturally. But it involves everything from understanding the physics of the environment your manipulating to how fast you drill a hole into metal or wood and why, to how fluid movement works in pipes and ducts, etc.\nMy goal is to provide the resources to build this foundation for others. So that, if you come across new problems it doesn’t feel like you’re in the dark as to where to start. If you can look at the system, understand how it works, you can easily picture what is happening and how to approach solving whatever you’re working on.\nMany textbooks try to cover the “fundamentals” of many aspects of the trade, but do so in a way where instead of explaining the basics of, for example, heat loss and how that affects occupant comfort and load calculations and how to identify issues, instead tend to focus on conduction, convection, radiation, and just the fact these types of heat transfer exist.\nI have taught in programs where the building of knowledge in different areas of the trade happen almost schizophrenically instead of a slow building of one idea after another. This is why, in my teaching career, I always preferred teaching in an environment where I could create and direct my own coursework instead of utilizing boiler plate solutions. Any boilerplate is flawed by its nature. While some subjects can be moved around as necessary, many things when learning the trades have to be built upon earlier ideas, very carefully, if a comprehensive understanding is going to have a good foundation.",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "About Me:",
    "text": "About Me:\nMy name is Chris Freeman. I have been working in the trades since I was 16 years old, and started full time not long after I turned 17, after getting my GED in the 11th Grade. Below is a short list of the things I have done as part of my career in the mechanical trades. I also have a complete version of my resume available, here. That provides a little more detail on the key points, below, if int\nI post this information on the site simply so my background can be understood. Because, as you will see, my experience spans a wide area of HVAC and Plumbing, and I have been involved in so may different areas over my career, I have a very good foundation on lots of aspects, but not a lot of specific knowledge in some things. A good example would be, one of the guys I learned HVAC from is capable of telling you how to diagnose specific systems from specific model years for residential systems. That is not my area of expertise. My area of expertise is providing insights and resources on how to procure the best information in a short period of time to solve a wide range of problems. There are very things I know immediately (that aren’t core ideas) but I can find specific information on things very quickly. Or tell you the best way of doing estimating, or VRF, or what to look out for, etc. Most of the time, if I am troubleshooting it, I get the necessary manuals in my hand in just a couple minutes and start from there. And that is the kind of resourcefulness I want to spread through the industry.\nWith that rambling complete (I am not known for brevity, I am working on that) here is my experience in the trades.\n\nJob Coordination & Estimation\nPDF creation and overlay, submittal documents, O&M manual creation, design coordination with other trades, engineers, architects, and building owners. Development of coordination drawings. Assistance and consulting for commercial facilities owners on self-performing tenant and core building improvement projects. Created my own estimating tools using Bluebeam. Have created exactly to scale tools in Bluebeam on multiple projects to measure and cut piping for prefabrication before installation with very good accuracy.\n\n\nPlumbing\nSanitary waste and vent, storm piping, gas, chemical drainage, multi horsepower storm and sewage pump controls and installation, gas piping systems, domestic and non potable water systems. Drain cleaning with K50, K60, sewer jetter machine, hot water jetter machine, sewer cameras, and locators. Creation and submittal of original residential and commercial design documents for plan review. Coordination with design engineers on changes for county plan review comment resolutions. Water filtration systems, well and well piping systems.\n\n\nFuel Gas Systems\nNatural Gas and LP, Design, value engineering, custom regulator selection, main regulator repairs, verification of existing system meter and regulator capacities, overcoming design challenges in areas with very low gas pressures (Bethesda, DC), troubleshooting intermittent gas appliance failures, LP systems selection and design, creation and submittal of original residential and commercial design documents for plan review\n\n\nMechanical and HVAC\nVAV systems, rooftop units, design of controls systems for boilers, interlock kitchen equipment, design basic electrical systems, creation and submittal of original residential and commercial design documents for plan review, design grease waste systems, installation, design, and commissioning of VRV/VRF systems, unitary split systems, design, installation and commissioning of mini-split systems, grease duct installation, layout and coordination of mechanical systems, full mechanical projects, cooling tower piping design and installation, VFD installation for HVAC systems, zoning systems, clothes dryer venting, commercial refrigeration controls and piping, fire dampers, steam and hydronic piping, smoke damper commissioning, fire damper commissioning, quality control, walk in cooler fabrication\n\n\nDuctwork\nDesign, verification of SMACNA compliance, redesign, Manual D calculations. Airflow measurements using hot wire anemometers, vane anemometers, pitot tubes and manometers, static pressure probes and manufacturers data. Sketching commercial and residential installations for procurement, fire dampers, fire and smoke dampers, ceiling radiation dampers, balancing, factory fabricated stainless, exhaust systems design and retrofits, fan selection for commercial kitchen exhaust, custom fitting and fire damper fabrication, single and double wall flue design, grease duct layout and fitting, light testing, stainless, aluminum, galvanized, and black iron.\n\n\nSoftware\nMicrosoft Office (Excel, MS Word, Outlook, Etc), Planswift, Bluebeam, Wrightsoft Right-Suite Universal, Solidyne, KMC, Siemens, Computrols, iVu, Tracer\n\n\nDuctwork\nDesign, verification of SMACNA compliance, redesign, Manual D calculations. Airflow measurements using hot wire anemometers, vane anemometers, pitot tubes and manometers, static pressure probes and manufacturers data. Sketching commercial and residential installations for procurement, fire dampers, fire and smoke dampers, ceiling radiation dampers, balancing, factory fabricated stainless, exhaust systems design and retrofits, fan selection for commercial kitchen exhaust, custom fitting and fire damper fabrication, single and double wall flue design, grease duct layout and fitting, light testing, stainless, aluminum, galvanized, and black iron.\n\n\nFire Sprinkler Systems\nRepair, partial replacement, backflow preventer testing, underground sprinkler main installation in most local jurisdictions, repair compressed air dry systems, fire panel troubleshooting, electrical interlocking of kitchen hoods for code compliance\n\n\nElectrical\nMain panel replacements, troubleshooting, verification of code compliance of different wire types, small facilities design (stamped by others), kitchen hood interlocks in restaurant facilities, repairs in breaker panels, disconnects, equipment, transformers, appliances, appurtenances, buck/boost calculations.",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "about.html#non-trade-related-skills",
    "href": "about.html#non-trade-related-skills",
    "title": "About",
    "section": "Non Trade Related Skills",
    "text": "Non Trade Related Skills\nAudio Production using Reaper, Cubase, Native Instruments, Amplitube, and many other audio software solutions. Former (locally touring) bass player for Adwela and the Uprising (wrote, in conjunction with my cousin most of the bass and later featured by another player on the road less traveled). Avergae bass player, mediocre guitar and keys player, extensive practice is sound design and audio mixing. Helped in a local recording studio for a couple years recording other local bands.\nBass and guitar modifications. Rebuilt many guitars doing basic setup work and extensive electronic work. My most extensive project being a complete overhaul of of a Bass VI. Have created many very complicated switching systems which greatly assisted in my understanding of manipulating controls in HVAC and other trades.\nSome electronics hobby experience in modifying and building guitar pedals and many failed attempts at building other devices. I have had less success in this area but have learned a lot concerning the inner workings of control/circuit boards, transistors, diodes, thermistors, resistors, capacitors, integrated circuits, etc.\nLimited but growing experience with HTML, vanilla javascript, CSS, LaTeX, Linux, Quarto, VS Code, markdown, OBS Studio, Davinci Resolve, etc. Built my first websites as a teenager but did not pick up the hobby again until recently. Early coding experience helped in picking the hobby back up.\nHave studied woodworking, machining, welding, and other fundamentals….\nThat’s most of the important stuff….",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "ductSizingArchiveCopy.html",
    "href": "ductSizingArchiveCopy.html",
    "title": "ductSizingallv1",
    "section": "",
    "text": "viewof tonsAcSel = Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n\n\n\n\n\n\n\nviewof CfmPerTonSel = Inputs.radio([325, 350, 375, 400, 425, 450], {\n  label: \"Select CFM per Ton\", \n  value: 350\n});\n\n\n\n\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"})\n\n\n\n\n\n\n\n\nPlease check checkbox above if furnace is used for heating or auxiliary heating\n\n\n\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\n\n\n\n\n\n\n\n\n\nviewof furnInBTU = Inputs.range([20000, 200000],{\n  label: \"System BTU/h\",\n  value: 80000,\n  step: 1000\n});\n\n\n\n\n\n\n\n\n\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"System Efficiency\",\n  value: .80,\n  step: .01,\n  style: \"percent\",\n  width: 80\n});\n\n\n\n\n\n\n\n\n\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nacCFM = tonsAcSel * CfmPerTonSel;\nnofurnCFM = 0;\nminfTAc = acCFM / 2;\nminrDAc = (acCFM / 4.86);\nminsDAc = acCFM / 6.5;\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta)\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\n\n\n\n\n\n\n\nminSysCFM = \n{\n  if(acCFM &gt; furnMinCFM) { \n    return acCFM\n  } else { \n    return furnMinCFM\n  }\n};\n\n\n\n\n\n\n\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#system-information",
    "href": "ductSizingArchiveCopy.html#system-information",
    "title": "ductSizingallv1",
    "section": "",
    "text": "viewof tonsAcSel = Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n\n\n\n\n\n\n\nviewof CfmPerTonSel = Inputs.radio([325, 350, 375, 400, 425, 450], {\n  label: \"Select CFM per Ton\", \n  value: 350\n});\n\n\n\n\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"})\n\n\n\n\n\n\n\n\nPlease check checkbox above if furnace is used for heating or auxiliary heating\n\n\n\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\n\n\n\n\n\n\n\n\n\nviewof furnInBTU = Inputs.range([20000, 200000],{\n  label: \"System BTU/h\",\n  value: 80000,\n  step: 1000\n});\n\n\n\n\n\n\n\n\n\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"System Efficiency\",\n  value: .80,\n  step: .01,\n  style: \"percent\",\n  width: 80\n});\n\n\n\n\n\n\n\n\n\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nacCFM = tonsAcSel * CfmPerTonSel;\nnofurnCFM = 0;\nminfTAc = acCFM / 2;\nminrDAc = (acCFM / 4.86);\nminsDAc = acCFM / 6.5;\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta)\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\n\n\n\n\n\n\n\nminSysCFM = \n{\n  if(acCFM &gt; furnMinCFM) { \n    return acCFM\n  } else { \n    return furnMinCFM\n  }\n};\n\n\n\n\n\n\n\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#minimum-system-cfm-filter-and-duct-sizes",
    "href": "ductSizingArchiveCopy.html#minimum-system-cfm-filter-and-duct-sizes",
    "title": "ductSizingallv1",
    "section": "#### Minimum System CFM, Filter, and Duct Sizes",
    "text": "#### Minimum System CFM, Filter, and Duct Sizes\n\nmd`##### Minimum CFM: ${(minSysCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nmd`##### Minimum 1\" Filter Area: ${(minfTA1).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum 2\"-5\" Filter Area: ${(minfTA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Return Area: ${(minrDA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Supply Area: ${(minsDA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#minimum-heating-cfm-filter-and-duct-sizes",
    "href": "ductSizingArchiveCopy.html#minimum-heating-cfm-filter-and-duct-sizes",
    "title": "ductSizingallv1",
    "section": "#### Minimum Heating CFM, Filter, and Duct Sizes",
    "text": "#### Minimum Heating CFM, Filter, and Duct Sizes\n\nmd`##### Furnace Efficiency: ${(furnEff).toLocaleString(undefined, {style: \"percent\"})}`;\n\n\n\n\n\n\n\nmd`##### Furnace Output Btu/h: ${(furnOutBTU).toLocaleString(undefined, {maximumFractionDigits: 0})} BTU/h`;\n\n\n\n\n\n\n\nmd`##### Furnace Max Delta: ${furnMaxDelta}${tex`\\degree`}F ${tex`\\Delta`}T`;\n\n\n\n\n\n\n\nmd`##### Furnace Minimum CFM: ${(furnMinCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nmd`##### Minimum Heating Filter Area: ${(minfTAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Return Area: ${(minrDAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Supply Area: ${(minsDAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\n\nMinimum Air Conditioner CFM, Filter, and Duct Sizes\n\nmd`##### Minimum AC CFM: ${tonsAcSel * CfmPerTonSel} cfm`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Filter Area: ${(minfTAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Return Area: ${(minrDAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Supply Area: ${(minsDAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#filters",
    "href": "ductSizingArchiveCopy.html#filters",
    "title": "ductSizingallv1",
    "section": "Filters",
    "text": "Filters\n\nviewof filterThickness = Inputs.radio([1, 2, 4, 5], {label: \"Select Filter Thickness\", value: 2})\n\n\n\n\n\n\n\nFilter Area\n\nf1A = f1W * f1H; \nf2A = f2W * f2H; \nf3A = f3W * f3H; \nfT = f3A + f2A + f1A; \nfTcfmMax = fT * 2; \nfTcfmRec = fT * 1.5;\nfTdA = (acCFM / 2) - fT;\nfV = minSysCFM / (fT / 144)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof f1W = Inputs.number([0, 60],{\n  label: \"Filter 1 Width\",\n  width: 75,\n  value: 16,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f1H = Inputs.number([0, 60],{\n  label: \"Filter 1 Height\",\n  width: 75,\n  value: 25,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 1 Area ${f1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof f2W = Inputs.number([0, 60],{\n  label: \"Filter 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f2H = Inputs.number([0, 60],{\n  label: \"Filter 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 2 Area ${f2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof f3W = Inputs.number([0, 60],{\n  label: \"Filter 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f3H = Inputs.number([0, 60],{\n  label: \"Filter 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 3 Area ${f3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nFilters Report\n\n\n\n\nTotal Filter Area\n\nmd`  ${fT} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${fTcfmMax}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${fTcfmRec}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${fTdA}sq. in.`;\n\n\n\n\n\n\n\n\n\nmd`#### Filter Face Velocity:   ${(fV).toLocaleString(undefined, {maximumFractionDigits: 0})} feet per minute`;\n\n\n\n\n\n\n\nfP1d = (((fV - 75) / 75)) * .07\nfP2d = (((fV - 75) / 75)) * .045\nfP4d = (((fV - 75) / 75)) * .04\nfP5d = (((fV - 75) / 75)) * .03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEstimated Pressure Drop Based on Filter Thickness\n\n\n\nmd`#### 1\" Filter Pressure Drop:  ${(fP1d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\nmd`#### 2\" Filter Pressure Drop:  ${(fP2d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\nmd`#### 4\" Filter Pressure Drop:  ${(fP4d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\n\nNote: Filter Pressure drop numbers are estimates only based on an approximate average for MERV 8 to MERV 11 filters. Please refer to pressure drop charts for actual filter installed to ensure accuracy."
  },
  {
    "objectID": "ductSizingArchiveCopy.html#return-ducts",
    "href": "ductSizingArchiveCopy.html#return-ducts",
    "title": "ductSizingallv1",
    "section": "Return Ducts",
    "text": "Return Ducts\n\nReturn Duct Area\n\nrD1A = rD1W * rD1H; \nrD2A = rD2W * rD2H; \nrD3A = rD3W * rD3H; \nrDT = rD4A + rD5A + rD6A + rD3A + rD2A + rD1A; \nrDTcfmMax = rDT * 4.5; \nrDTcfmRec = rDT * 3;\nrDTdA = (acCFM / 3) - rDT;\nrD4dr = rD4d / 2\nrD5dr = rD5d / 2\nrD6dr = rD6d / 2\nrD4A = rD4dr * rD4dr * pi\nrD5A = rD5dr * rD5dr * pi\nrD6A = rD6dr * rD6dr * pi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof rD1W = Inputs.number([0, 60],{\n  label: \"Return Duct 1 Width\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD1H = Inputs.number([0, 60],{\n  label: \"Return Duct 1 Height\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 1 Area ${rD1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD2W = Inputs.number([0, 60],{\n  label: \"Return Duct 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD2H = Inputs.number([0, 60],{\n  label: \"Return Duct 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 2 Area ${rD2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD3W = Inputs.number([0, 60],{\n  label: \"Return Duct 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD3H = Inputs.number([0, 60],{\n  label: \"Return Duct 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 3 Area ${rD3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD4d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 4 Diameter\",\n  value: 12,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 4 Area ${(rD4A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD5d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 5 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 5 Area ${(rD5A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD6d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 6 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 6 Area ${(rD6A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nReturn Ducts Report\n\n\n\n\nTotal Return Duct Area\n\nmd`  ${(rDT).toLocaleString(undefined, {maximumFractionDigits: 0})} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${(rDTcfmMax).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${(rDTcfmRec).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${(rDTdA).toLocaleString(undefined, {maximumFractionDigits: 0})}sq. in.`;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#supply-ducts",
    "href": "ductSizingArchiveCopy.html#supply-ducts",
    "title": "ductSizingallv1",
    "section": "Supply Ducts",
    "text": "Supply Ducts\n\nSupply Duct Area\n\nsD1A = sD1W * sD1H; \nsD2A = sD2W * sD2H; \nsD3A = sD3W * sD3H; \nsDT = sD4A + sD5A + sD6A + sD3A + sD2A + sD1A; \nsDTcfmMax = sDT * 6; \nsDTcfmRec = sDT * 4.5;\nsDTdA = (acCFM / 4.5) - sDT;\nsD4dr = sD4d / 2\nsD5dr = sD5d / 2\nsD6dr = sD6d / 2\nsD4A = sD4dr * sD4dr * pi\nsD5A = sD5dr * sD5dr * pi\nsD6A = sD6dr * sD6dr * pi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof sD1W = Inputs.number([0, 60],{\n  label: \"Supply Duct 1 Width\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD1H = Inputs.number([0, 60],{\n  label: \"Supply Duct 1 Height\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 1 Area ${sD1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD2W = Inputs.number([0, 60],{\n  label: \"Supply Duct 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD2H = Inputs.number([0, 60],{\n  label: \"Supply Duct 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 2 Area ${sD2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD3W = Inputs.number([0, 60],{\n  label: \"Supply Duct 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD3H = Inputs.number([0, 60],{\n  label: \"Supply Duct 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 3 Area ${sD3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD4d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 4 Diameter\",\n  value: 12,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 4 Area ${(sD4A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD5d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 5 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 5 Area ${(sD5A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD6d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 6 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 6 Area ${(sD6A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nSupply Ducts Report\n\n\n\n\nTotal Supply Duct Area\n\nmd`  ${(sDT).toLocaleString(undefined, {maximumFractionDigits: 0})} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${(sDTcfmMax).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${(sDTcfmRec).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${(sDTdA).toLocaleString(undefined, {maximumFractionDigits: 0})}sq. in.`;"
  },
  {
    "objectID": "ductSizingArchiveCopy.html#instructions",
    "href": "ductSizingArchiveCopy.html#instructions",
    "title": "ductSizingallv1",
    "section": "Instructions",
    "text": "Instructions\n\nSelect System Tonnage\nSelect Desired CFM per Ton for Air Conditioning\n\n350 cfm per ton is recommended for humid climates (all states east of the Mississippi and the Pacific Coast) or if necessary cfm per ton is unknown\n400 cfm per ton is recommended for non-coastal Midwest and Western US\n450 cfm per ton may be used for more arid climates like Arizona, Nevada, Colorado, etc\nA map will be available to make choosing necessary cfm per ton easier in future updates\n\nIf Gas Heat -\n\nCheck box next to Furnace to indicate calculations should also utilize furnace CFM\nSelect Furnace Input BTU and Efficiency\nInput max temperature rise across durnace if known (if unknown, 50\\(\\Delta\\)T recommended$)"
  },
  {
    "objectID": "resumenoco.html",
    "href": "resumenoco.html",
    "title": "Resume",
    "section": "",
    "text": "To present abilities in the field of plumbing and mechanical trades. Including complete commercial and residential design, project management for up to $2million projects, consulting owners and contractors, Industrial, commercial, and residential service, project management and schedule generation, and estimation.\n\nTo show that I am highly adaptable in the mechanical trades and have performed in the majority of roles available in contracting companies.\n\nIn my first job I went from a helper to designing from scratch the entire estimating system after a brief tutelage from the previous estimator who had to retire. Since then I have taught and performed duties for various firms and earned the respect of my peers and customers. I take pride in finding efficient and cost effective methods of performing my job duties while maintaining a high level of workmanship both in the field and working within software.\n\nI have been educating, learning, and gathering resources to be able to overcome any situation in the field. If there is an issue where a customer or employer needs a system back online or completed in a timely manner and there are parts that are difficult to procure or personnel untrained on the system I find or determine effective methods of solving those issues and being resourceful. If there are reoccurring issues with field personnel I find effective methods of communicating, training, and motivating the personnel to eliminate those issues. If clients need innovative solutions to complex problems, I excel in providing those solutions and using industry standard references to back-up any claims or suggestions made to ensure there is no doubt that the solutions provided are evidence based and code compliant.\n\n\n\n\nLicense | Number\n\nVA Master Tradesman MPLB MHVA MGFC | 2710058271\nVA Backflow Prevention Device Worker | 2717057680\nDC Plumbing | PGM1001129\n\nNate Certification CHP-5 | 2024 | Online\n\n\n\n\nDegree/Certification | Date Earned | School\n\n\nGED | February 2002 | Spotsylvania High School\nPlumbing Apprenticeship | June 2006 | Fairfax County Public Schools AC\nOSHA 10-Hour Training | March 2003 | Fairfax County Public Schools ACE\nHVAC Apprenticeship | May 2012 | Fairfax County Public Schools ACE\nDaikin VRV Certification - Installer | May 2013 | Havtech\nNATE Certification Air to Air Heat PumpService/Installatiohn | April 2014 | Johnstone Supply\nCFC Certification | March 2014 | Johnstone Supply\nToshiba/Carrier VRF Certification | May 2014 | Carrier Enterprise\nDaikin VRV Certification – Installation and Commissioning | April 2018 | Havtech",
    "crumbs": [
      "Home",
      "About",
      "Resume"
    ]
  },
  {
    "objectID": "resumenoco.html#christopher-j.-freeman",
    "href": "resumenoco.html#christopher-j.-freeman",
    "title": "Resume",
    "section": "",
    "text": "To present abilities in the field of plumbing and mechanical trades. Including complete commercial and residential design, project management for up to $2million projects, consulting owners and contractors, Industrial, commercial, and residential service, project management and schedule generation, and estimation.\n\nTo show that I am highly adaptable in the mechanical trades and have performed in the majority of roles available in contracting companies.\n\nIn my first job I went from a helper to designing from scratch the entire estimating system after a brief tutelage from the previous estimator who had to retire. Since then I have taught and performed duties for various firms and earned the respect of my peers and customers. I take pride in finding efficient and cost effective methods of performing my job duties while maintaining a high level of workmanship both in the field and working within software.\n\nI have been educating, learning, and gathering resources to be able to overcome any situation in the field. If there is an issue where a customer or employer needs a system back online or completed in a timely manner and there are parts that are difficult to procure or personnel untrained on the system I find or determine effective methods of solving those issues and being resourceful. If there are reoccurring issues with field personnel I find effective methods of communicating, training, and motivating the personnel to eliminate those issues. If clients need innovative solutions to complex problems, I excel in providing those solutions and using industry standard references to back-up any claims or suggestions made to ensure there is no doubt that the solutions provided are evidence based and code compliant.\n\n\n\n\nLicense | Number\n\nVA Master Tradesman MPLB MHVA MGFC | 2710058271\nVA Backflow Prevention Device Worker | 2717057680\nDC Plumbing | PGM1001129\n\nNate Certification CHP-5 | 2024 | Online\n\n\n\n\nDegree/Certification | Date Earned | School\n\n\nGED | February 2002 | Spotsylvania High School\nPlumbing Apprenticeship | June 2006 | Fairfax County Public Schools AC\nOSHA 10-Hour Training | March 2003 | Fairfax County Public Schools ACE\nHVAC Apprenticeship | May 2012 | Fairfax County Public Schools ACE\nDaikin VRV Certification - Installer | May 2013 | Havtech\nNATE Certification Air to Air Heat PumpService/Installatiohn | April 2014 | Johnstone Supply\nCFC Certification | March 2014 | Johnstone Supply\nToshiba/Carrier VRF Certification | May 2014 | Carrier Enterprise\nDaikin VRV Certification – Installation and Commissioning | April 2018 | Havtech",
    "crumbs": [
      "Home",
      "About",
      "Resume"
    ]
  },
  {
    "objectID": "resumenoco.html#skills-and-abilities",
    "href": "resumenoco.html#skills-and-abilities",
    "title": "Resume",
    "section": "Skills and Abilities",
    "text": "Skills and Abilities\n\nKey Abilities\n\nProblem solving, complex troubleshooting, research, consultation, instruction, and applying technical documentation and streamlining or standardizing processes in the Mechanical Trades\n\nDesign, Build, Installation, and Service Plumbing and Mechanical Systems\n\nCode compliance assurance consulting and design assistance\n\nEstimating & value engineering services (while meeting or exceeding specified performance)\n\nEstimation of plumbing, HVAC, refrigeration, and electrical systems\n\nProject Management of plumbing, HVAC, refrigeration, electrical and mechanical systems installation projects\n\nProblem solving and troubleshooting complex issues with mixing valves, circulation systems, VFD’s, chiller and boiler systems, cooling towers, VAV systems, VRF systems, gas and electric tankless water heaters\n\nComplete electrical systems design for smaller facilities (tenant and warehouse spaces)\n\nTechnical support to technicians, maintenance personnel, building owners, homeowners, and company staff\n\nResearch and investigation of code compliant, industry standard, governmental testing, and novel systems implementations. Exceptional ability to find trustworthy resources for solving problems and avoiding false or misleading information.\n\nSimplifying and standardizing approaches for less experienced personnel by aggregating and consolidating information. Creation of novel documentation for training and field implementation via pdf illustration and calculator creation in Excel and HTML/Javascript\n\nStandardizing estimation processes for labor hours and materials. Determining suitable multipliers for list pricing to automate or easily update materials costs.\n\nDetermining the most cost effective materials combinations to achieve desired project outcomes and provide high quality products at a reduced cost in both construction and service\nAbility to learn new software and systems at a rapid pace. Ability to troubleshoot unfamiliar systems utilizing technical literature and resources. \nDesign systems to scale utilizing pdf software and CAD resources to minimize necessity for field measurements and layouts when cost effective\n\n\n\n\nJob Coordination & Estimation\nPDF creation and overlay, submittal documents, O&M manual creation, design coordination with other trades, engineers, architects, and building owners. Development of coordination drawings. Assistance and consulting for commercial facilities owners on self-performing tenant and core building improvement projects\n\n\nPlumbing\nSanitary waste and vent, storm piping, gas, chemical drainage, multi horsepower storm and sewage pump controls and installation, gas piping systems, domestic and non potable water systems. Drain cleaning with K50, K60, sewer jetter machine, hot water jetter machine, sewer cameras, and locators. Creation and submittal of original residential and commercial design documents for plan review. Coordination with design engineers on changes for county plan review comment resolutions.\n\n\nFuel Gas Systems\nNatural Gas and LP, Design, value engineering, custom regulator selection, main regulator repairs, verification of existing system meter and regulator capacities, overcoming design challenges in areas with very low gas pressures (Bethesda, DC), troubleshooting intermittent gas appliance failures, LP systems selection and design, creation and submittal of original residential and commercial design documents for plan review\n\n\nMechanical and HVAC\nVAV systems, rooftop units, design of controls systems for boilers, interlock kitchen equipment, design basic electrical systems, creation and submittal of original residential and commercial design documents for plan review, design grease waste systems, installation, design, and commissioning of VRV/VRF systems, unitary split systems, design, installation and commissioning of mini-split systems, grease duct installation, layout and coordination of mechanical systems, full mechanical projects, cooling tower piping design and installation, VFD installation for HVAC systems, zoning systems, clothes dryer venting, commercial refrigeration controls and piping, fire dampers, steam and hydronic piping, smoke damper commissioning, fire damper commissioning, quality control, walk in cooler fabrication\n\n\nDuctwork\nDesign, verification of SMACNA compliance, redesign, Manual D calculations. Airflow measurements using hot wire anemometers, vane anemometers, pitot tubes and manometers, static pressure probes and manufacturers data. Sketching commercial and residential installations for procurement, fire dampers, fire and smoke dampers, ceiling radiation dampers, balancing, factory fabricated stainless, exhaust systems design and retrofits, fan selection for commercial kitchen exhaust, custom fitting and fire damper fabrication, single and double wall flue design, grease duct layout and fitting, light testing, stainless, aluminum, galvanized, and black iron.\n\n\nInsulation\nFiberglass and elastomeric insulation installation, custom cutting and fitting of elastomeric insulation for equipment, pumps, and appurtenances, PVC outdoor coverings for insulation.\n\n\nFire Sprinkler Systems\nRepair, partial replacement, backflow preventer testing, underground sprinkler main installation in most local jurisdictions, repair compressed air dry systems, fire panel troubleshooting, electrical interlocking of kitchen hoods for code compliance\n\n\nElectrical\nMain panel replacements, troubleshooting, verification of code compliance of different wire types, small facilities design (stamped by others), kitchen hood interlocks in restaurant facilities, repairs in breaker panels, disconnects, equipment, transformers, appliances, appurtenances, buck/boost calculations.\n\n\nMaterials Connections Experience\nSolvent welding up to 18”, brazing up to 3”, soldering up to 6”, threading up to 2”, flaring up to 1-1/2”, roll grooving (steel, PVC, and CPVC) up to 6”, tack welding up to 8”, PP fusion systems up to 4”, Propress up to 4”, compression up to 1”, AWWA mechanical joint and flange fittings up to 12”, plastic and CSST fuel gas up to 2, no hub couplings up to 15”, expansion PEX up to 1-1/2”, crimp and compression PEX up to 1”, Ductwork up to 60”\n\n\nHeavy Equipment Operation Experience\nMini excavator, skidsteer, aerial boom lift, scissor lift, backhoe, ditch witch, warehouse fork lift, snow plow (large pickup mounted)\n\n\nSoftware Experience\nExperienced with Microsoft Office (Excel, MS Word, Outlook, Etc), Planswift, Bluebeam, Wrightsoft Right-Suite Universal, Acrobat DC, Limited experience FastEST, FastDuct, FreeCAD, Sketchup, Microsoft Project. I have created my own estimating templates with Excel using PHCC labor rates for over 15 years, have created detailed estimating templates using Planswift (they limited capability on previous updates) and currently use Bluebeam and Excel. Created my own estimating tools using Bluebeam. Have created exactly to scale tools in Bluebeam on multiple projects to measure and cut piping for prefabrication before installation with very good accuracy.\nStreaming and video recording tools such as OBS and google classroom for teaching purposes. Extensive knowledge of recording software including Reaper, Cubase, Nuendo, and some Pro Tools. Some experience in DaVinci Resolve. Use of Google Meet and Zoom for remote learning. Voicemeeter Potato and ReaRoute to overcome audio routing limitations BMS systems experience in Solidyne, KMC, Siemens, Computrols, iVu, Tracer, limited Honeywell. Mostly service and maintenance related. ### Employment Experience\nJob Title | Company | Date Range\n\nPlumbing Department Manager/Service Technician/Estimator | Company | May 2023 – Present\n◦ Residential and Commercial plumbing and HVAC service, installation, and management, procurement and estimating of plumbing contracts, and project management on construction projects. BMS controls service for Solidyne and KMC products, Belimo valves and actuators, commercial service for building with Carrier iVu, Trane Tracer, Computrols, and Siemens PCS systems. Commissioning of commercial systems installations and consulting with controls manager on sequences of operation. Service of air cooled and water cooled chillers, boilers, RTU, VAV, water source heat pumps, packaged AC units, and split systems. Directing technicians on particularly difficult service calls and procuring cost effective parts. Inputting service costs in Service Titan dispatch software. Technician training for plumbing and HVAC services.\n\nProject Manager, Estimator | Company | November 2021 – May 2023\n◦ Residential, Commercial, and Industrial Service and installation of plumbing and HVAC systems, project management for industrial wastewater projects, tenant improvement, office buildings, pool house facilities, and restaurants, house renovations, load calculations, gas calculations, consultations for other mechanical contractors, diagnosing controls systems issues, consulting building owners. \nCommercial Service Manager | Company | September 2021 – October 2021\n◦ Residential, Commercial, and Industrial Service and installation of plumbing and HVAC systems, assist in providing estimates for special projects, creating projects scopes of work, set service pricing, troubleshoot and assist technicians with particularly troublesome systems \nProject Manager, Estimator | Company | July 2016 – August 2021\n◦ Residential Commercial, and Industrial Service and installation of plumbing and HVAC systems, project management for industrial wastewater projects, tenant improvement, office buildings, pool house facilities, and restaurants, house renovations, load calculations, gas calculations, consultations for other mechanical contractors, diagnosing controls systems issues, consulting building owners. \nPlumbing Department Manager/Service Technician | Company | January 2014 – June 2016\n◦ Residential and Commercial plumbing and HVAC service, installation, and management, procurement and estimating of plumbing contracts, and project management assistance on historical facilities, server facilities, military installations, and office buildings. \nHVAC IV Instructor | Fairfax County Public Schools ACE Program\n◦ Duties – Create and administer course syllabus on refrigeration cycle and troubleshooting, Manual J Load calculations, Manual D Duct Calculations, Manual S Equipment Selection, Manual T Registers and Grille Placement and selection, airflow calculations, National Electrical Code Fundamentals, International Mechanical Code, International Fuel Gas Code, and journeyman test preparation\n\nEstimator/Project Manager | Company | July 2007 – December 2013\n◦ Duties: Estimate and manage plumbing and mechanical projects including office buildings, hotels, industrial shipping facilities, wastewater treatment facilities, retail facilities, tenant improvement projects, assist employees on troubleshooting mechanical and plumbing systems, create submittals and project documents, design plumbing projects, coordination drawings, code consulting, QC for government facilities in conjunction with Army Corps of Engineers, military installations, etc.\n\nPlumbing III Instructor | Fairfax County Public Schools ACE Program | September 2006 – June 2008\n◦ Duties – Create and administer course syllabus for gas piping installation, troubleshooting plumbing systems, blueprint reading, contract documents, and fuel gas code\n\nForeman | Company | June 2006 – July 2007\n◦ Duties – Direct crews tradesman on the installation of plumbing systems in hotels and office buildings, track time and expenses, order materials, layout and install plumbing piping systems\n\nApprentice | Company | February 2002 – June 2006\n◦ Duties – Installation of plumbing piping systems for hotels, office buildings, residential occupancies, residential and commercial service",
    "crumbs": [
      "Home",
      "About",
      "Resume"
    ]
  },
  {
    "objectID": "resumenoco.html#some-major-projects-estimated-and-managed",
    "href": "resumenoco.html#some-major-projects-estimated-and-managed",
    "title": "Resume",
    "section": "Some Major Projects Estimated and Managed",
    "text": "Some Major Projects Estimated and Managed\n\nUnited States Park Police Stables – Washington, DC (Full Plumbing Design, Estimation, and Project Management)\n\nFood and Beverage Food Production Facility – Complete redesign and installation of plumbing systems, installation of refrigeration systems for large walk-in cooler and adjacent walk-in freezer, consulting and installation of large commercial ovens and dishwashers, gas piping, electrical installation for walk-in coolers, electrical and fuel gas conversion of overseas kitchen equipment including custom orifice fabrication and transformer installation\n\nPoplar Point Pumping Station (plumbing, chemical waste (PP fusion), gray water (reclaimed storm with disinfection), complete insulation installation (fiberglass and armaflex) and mini split systems)\n\nDC Water RAW WWPS 2 (plumbing, hydronics and VRF, stainless steel schedule 40 piping, RPZ installation and testing)\n\nCourtyard Suites Stafford Quantico (full mechanical, RTUs, Duct, VRF, Plumbing, kitchen hoods, grease duct)\n\nMD City treatment plant (plumbing and mini splits)\n\nGeorge Washington’s Mt Vernon Bolton Building Renovations (plumbing and hydronics, chilled water and boiler water piping, VRF installation)\n\nSpencerville Adventist Academy (plumbing)\n\nFt Belvoir North (Mechanical QC)\n\nUPS Distribution Facility – Newington, VA (plumbing, gas piping)\n\nMetro Center Office Buildings, Alexandria, VA (plumbing)\n\nAloft Hotel in Loudoun (plumbing, ProVent (Sovent))\n\nMultiple office buildings, hotels, treatment plants in VA, DC, and MD, tenant design build, residential design build, gas piping design\n\nCommercial service for multistory office buildings ranging from basic RTU systems, chiller and boiler systems, VAV systems, and water source heat pump systems\n\n\n\nSome Noteworthy Service Projects\n\nUnited States Post Office Forensics Laboratory – Chemical Fume Hood calibration and adjustment, VFD repair and replacement, chemical waste repairs, cooling tower repairs\n\nFt Belvoir – Various Buildings – Repair and replacement of steam piping and boilers, pneumatic controls replacement, repair of centrifugal pump systems, large commercial split systems, backflow preventer testing and repair, Toshiba/Carrier VRF Installation and commissioning\n\nGeorge Washington’s Mt Vernon – Renovations of Plumbing and HVAC systems in O&M building, repairs and drain cleaning in commercial kitchen,\n\nNTIS Data Center – Liebert Server Room unit maintenance and repair, redesign of server room supply and return layout to increases system effectiveness\n\nIdemia – RTU Maintenance consulting and contracting, extensive rehabilitation from previous contractor performing substandard maintenance, additional RTU controls to prevent major failures\n\n5501 Backlick Rd – Complete renovation of public toilet facilities including new variable speed exhaust fans, new waste and domestic water piping, ductwork alterations, sensor water closets and lavatories, installation and layout design of stainless steel toilet partitions and accessories, ductwork redesign for multiple tenant spaces, replacement of water source heat pumps, service and repair of packaged Stultz RTU for server room, repair of mini split systems for auxiliary server room, packaged AC unit repair, cooling tower repair, extensive consulting for building owner group \nBrandon Ave. Corporate Center – Design and retrofit of floating point hydronic controls to alleviate tenant complaints due to insufficient granularity of zoning, properly setting VAV setpoints and re-calibration of Computrols VAV controllers. Repairs on cooling tower, package water cooled AC units, boiler, plumbing systems, duct systems.",
    "crumbs": [
      "Home",
      "About",
      "Resume"
    ]
  },
  {
    "objectID": "filterSizing.html",
    "href": "filterSizing.html",
    "title": "Think Mechanically",
    "section": "",
    "text": "acCfm = (acInfo.cfmPerTonSel * acInfo.tonsAcSel);\n\nnofurnCFM = 0;\n\n//Furnace Being Used Yes or No\n\nyesfurn = \"Gas Heating CFM is considered in these Design Calculations\";\nnofurn = \"Gas Heating CFM is set to Zero - Only AC CFM will be Used.  If you would like to have Furnace CFM considered in Design CFM calculations please check the Checkbox for Furnace under Furnace Info\";\n\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\n\n//Return Furnace CFM as calculated based on Inputs\n\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta);\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\nminSysCFM = \n{\n  if(acCfm &gt; furnMinCFM) { \n    return acCfm\n  } else { \n    return furnMinCFM\n  }\n};\n//Filter Performance if/else Statements\n\nfiltPerfGrade = \n{\n  if(fV &gt;= 500) { \n    return (\"Worst - Additional Filters Required\")\n  }\n    else if(filtExcessVelocity &gt;= 85) { \n      return (\"Poor\")\n  } else if(filtExcessVelocity &gt;= 30) { \n      return (\"Average\")\n  } else if(filtExcessVelocity &gt;= 3) { \n      return (\"Good\")\n  } else { \n    return (\"Excellent\")\n  }\n};\n\naddFilterArea = \n{\n  if(filterThickness == 1) { \n    return (minfTA1 - fT)\n  } else { \n    return (minfTA - fT)\n  }\n};\n\nfiltPerfGradePd = \n{\n  if(pDeltaEstimate &gt;= 0.3) { \n    return (\"Worst - Low System Efficiency\")\n  }\n    else if(pDeltaEstimate &gt;= 0.22) { \n      return (\"Poor\")\n  } else if(pDeltaEstimate &gt;= 0.15) { \n      return (\"Average\")\n  } else if(pDeltaEstimate &gt;= 0.1) { \n      return (\"Good\")\n  } else { \n    return (\"Excellent\")\n  }\n};\n\nfiltExcessVelocity = \n{\n  if(filterThickness == 1) { \n    return (fV - 225)\n  } else { \n    return (fV - 300)\n  }\n};\n\npDeltaEstimate = \n{\n  if(filterThickness == 1) { \n    return (fP1d)\n  } else if(filterThickness == 2) { \n      return (fP2d)\n  } else if(filterThickness == 3) { \n      return (fP4d)\n  } else { \n    return (fP5d)\n  }\n};\n\n//Filter Pressure Drop Estimates\nfV = minSysCFM / (fT / 144);\nfP1d = (((fV - 75) / 75)) * .07;\nfP2d = (((fV - 75) / 75)) * .045;\nfP4d = (((fV - 75) / 75)) * .04;\nfP5d = (((fV - 75) / 75)) * .03;\n\n//Formulas Related to Total System and Airflow Calculations\n//Minimum Duct and Filter Sizes for AC\nminfTAc = acCfm / 2;\nminrDAc = (acCfm / 4.86);\nminsDAc = acCfm / 6.5;\n//Minimum Duct and Filter Sizes for Heating\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\n//Filter Totals\nfTcfmMax = fT * 2; \nfT = f3A + f2A + f1A;\n//Minimum Duct and Filter Sizes Based on Design CFM\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;\n//Mathematical constants\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow To Use ThisAC InfoFurnace InfoResults\n\n\nThis group of tabs is where you can input information about the System you are calculation filter sizes for. After you have finished inputting all of the information, you can move on to see what the minimum duct and filter sizes are based on the information you provided.\nIf you are not sure what CFM per Ton or Furnace Max Temperature Rise to use, please leave them to the default. You can see more information here (this page not available yet)\nAfter you have input all of the information, please leave this tab on results if you intend to print this page, and for easy verification all the proper inputs have been completed accurately\n\n\n\n//AC Form Inputs for Tonnage and CFM per Ton\nviewof acInfo = Inputs.form({\n  tonsAcSel: Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3}),\n  cfmPerTonSel: Inputs.radio([325, 350, 375, 400, 425, 450], {label: \"Select CFM per Ton\", value: 350\n  })\n})\n\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"});\nviewof furnInBTU = Inputs.number([20000, 200000],{\n  label: \"Furnace Input BTU/h\",\n  value: 80000,\n  step: 1000,\n  width: 100\n});\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"Furnace Efficiency\",\n  value: .80,\n  step: .01,\n  width: 100\n});\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml`&lt;h5&gt;AC System: &lt;b&gt;${acInfo.tonsAcSel}&lt;/b&gt; Tons of AC at &lt;b&gt;${acInfo.cfmPerTonSel}&lt;/b&gt; CFM per Ton&lt;/h5&gt;`;\n\n\n\n\n\n\n\nhtml`&lt;h5&gt;Target CFM for Air Conditioning: &lt;b&gt;${acCfm}&lt;/b&gt;&lt;/h5&gt;`;\n\n\n\n\n\n\n\nhtml`&lt;h5&gt;Furnace Minimum CFM: &lt;b&gt;${(furnMinCFM).toLocaleString(undefined, {maximumFractionDigits: 0})}&lt;/b&gt; CFM&lt;/h5&gt;`\n\n\n\n\n\n\n\nhtml`&lt;h5&gt;Design CFM for Calculations: &lt;b&gt;${(minSysCFM).toLocaleString(undefined, {maximumFractionDigits: 0})}&lt;/b&gt; CFM&lt;/h5&gt;`\n\n\n\n\n\n\n\n\n\nhtml`&lt;i&gt;&lt;sub&gt;Note: Design CFM is the greater of Minimum Furnace or Minimum AC CFM&lt;/sub&gt;&lt;/i&gt;`;\n\n\n\n\n\n\n\nhtml`&lt;i&gt;&lt;sub&gt;Note: ${furnTrue}&lt;/sub&gt;&lt;/i&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\nf1A = f1w * f1h;\nf2A = f2w * f2h;\nf3A = f3w * f3h;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCurrent Filter SizesFilter AreaFilter Results\n\n\n\nviewof filterThickness = Inputs.select([1, 2, 4, 5], {label: \"Select Filter Thickness\", value: 2, width: 75})\n\n\n\n\n\n\nviewof f1w = Inputs.number([0, 60],{label: \"Filter 1 Width\", value: 16, width: 50});\nviewof f1h = Inputs.number([0, 60],{label: \"Filter 1 Height\", value: 20, width: 50});\nviewof f2w = Inputs.number([0, 60],{label: \"Filter 2 Width\", value: 0, width: 50});\nviewof f2h = Inputs.number([0, 60],{label: \"Filter 2 Height\", value: 0, width: 50});\nviewof f3w = Inputs.number([0, 60],{label: \"Filter 2 Width\", value: 0, width: 50});\nviewof f3h = Inputs.number([0, 60],{label: \"Filter 3 Height\", value: 0, width: 50})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml`&lt;style type=\"text/css\"&gt;\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{border-bottom-width:1px;border-color:black;border-style:solid;border-top-width:1px;border-width:0px;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-bottom-width:1px;border-color:black;border-style:solid;border-top-width:1px;border-width:0px;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-fnfs{font-family:Georgia, serif !important;font-size:13px;text-align:center;vertical-align:middle}\n.tg .tg-js4m{background-color:#cbcefb;font-family:Georgia, serif !important;font-size:14px;font-weight:bold;text-align:center;\n  vertical-align:bottom}\n.tg .tg-z6f0{background-color:#cbcefb;font-family:Georgia, serif !important;font-size:14px;font-weight:bold;text-align:center;\n  vertical-align:middle}\n.tg .tg-tx0g{background-color:#ffffff;font-family:Georgia, serif !important;font-size:13px;text-align:right;vertical-align:middle}\n.tg .tg-70wb{background-color:#cbcefb;font-family:Georgia, serif !important;font-size:14px;font-weight:bold;text-align:right;\n  vertical-align:middle}\n@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;}}&lt;/style&gt;\n&lt;div class=\"tg-wrap\"&gt;&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 483px\"&gt;&lt;colgroup&gt;\n&lt;col style=\"width: 161px\"&gt;\n&lt;col style=\"width: 161px\"&gt;\n&lt;col style=\"width: 161px\"&gt;\n&lt;/colgroup&gt;\n&lt;thead&gt;\n  &lt;tr&gt;\n    &lt;th class=\"tg-js4m\"&gt;Filter Areas&lt;/th&gt;\n    &lt;th class=\"tg-z6f0\"&gt;Sq. In.&lt;/th&gt;\n    &lt;th class=\"tg-z6f0\"&gt;Sq. Ft&lt;/th&gt;\n  &lt;/tr&gt;&lt;/thead&gt;\n&lt;tbody&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-tx0g\"&gt;Filter 1 :&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${f1A} sq. in.&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${(f1A / 144).toLocaleString(undefined, {maximumFractionDigits: 2})} sq. ft.&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-tx0g\"&gt;Filter 2 :&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${f2A} sq. in.&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${(f2A / 144).toLocaleString(undefined, {maximumFractionDigits: 2})} sq. ft.&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-tx0g\"&gt;Filter 3 :&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${f3A} sq. in.&lt;/td&gt;\n    &lt;td class=\"tg-fnfs\"&gt;${(f3A / 144).toLocaleString(undefined, {maximumFractionDigits: 2})} sq. ft.&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"tg-70wb\"&gt;Total Area :&lt;/td&gt;\n    &lt;td class=\"tg-z6f0\"&gt;${fT} sq. in.&lt;/td&gt;\n    &lt;td class=\"tg-z6f0\"&gt;${(fT / 144).toLocaleString(undefined, {maximumFractionDigits: 2})} sq. ft.&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;&lt;/div&gt;`\n\n\n\n\n\n\n\n\n\nmd`##### Total Filter Area:  **${fT} sq. in.**`;\n\n\n\n\n\n\n\nmd`##### Filter Performance Based on Velocity:  **${filtPerfGrade}**`;\n\n\n\n\n\n\n\nmd`##### Air Velocity at Filter:  **${(fV).toLocaleString(undefined, {maximumFractionDigits: 0})} FPM**`;\n\n\n\n\n\n\n\nmd`##### Filter Performance Based on Pressure Drop: **${filtPerfGradePd}**`\n\n\n\n\n\n\n\nmd`##### Estimated Filter Pressure Drop: **${(pDeltaEstimate).toLocaleString(undefined, {maximumFractionDigits: 3})} in. w.c.**`;\n\n\n\n\n\n\n\nmd`**Additional Filter Area Recommended:  ${(addFilterArea).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.**`;\n\n\n\n\n\n\n\n\n\nhtml`&lt;sub&gt;Note: Filter drop estimate is based on average of similar filters and should only be used as a reference.  Please consult exact filter specification or measure actual filter drop of clean filter, if possible&lt;/sub&gt;`",
    "crumbs": [
      "Home",
      "Tools",
      "FilterSizing"
    ]
  },
  {
    "objectID": "ductSizingall.html",
    "href": "ductSizingall.html",
    "title": "Trunk Duct Sizing",
    "section": "",
    "text": "viewof acInfo = Inputs.form({\n  tonsAcSel: Inputs.radio([325, 350, 375, 400, 425, 450], {label: \"Select CFM per Ton\", value: 350\n  }),\n  cfmPerTonSel: Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n});\n\n\n\n\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"})\n\n\n\n\n\n\n\n\nPlease check checkbox above if furnace is used for heating or auxiliary heating\n\n\n\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\n\n\n\n\n\n\n\n\n\nviewof furnInBTU = Inputs.range([20000, 200000],{\n  label: \"System BTU/h\",\n  value: 80000,\n  step: 1000\n});\n\n\n\n\n\n\n\n\n\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"System Efficiency\",\n  value: .80,\n  step: .01,\n  style: \"percent\",\n  width: 80\n});\n\n\n\n\n\n\n\n\n\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nacCFM = acInfo.tonsAcSel * acInfo.cfmPerTonSel;\nnofurnCFM = 0;\nminfTAc = acCFM / 2;\nminrDAc = (acCFM / 4.86);\nminsDAc = acCFM / 6.5;\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta)\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\n\n\n\n\n\n\n\nminSysCFM = \n{\n  if(acCFM &gt; furnMinCFM) { \n    return acCFM\n  } else { \n    return furnMinCFM\n  }\n};\n\n\n\n\n\n\n\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#system-information",
    "href": "ductSizingall.html#system-information",
    "title": "Trunk Duct Sizing",
    "section": "",
    "text": "viewof acInfo = Inputs.form({\n  tonsAcSel: Inputs.radio([325, 350, 375, 400, 425, 450], {label: \"Select CFM per Ton\", value: 350\n  }),\n  cfmPerTonSel: Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n});\n\n\n\n\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"})\n\n\n\n\n\n\n\n\nPlease check checkbox above if furnace is used for heating or auxiliary heating\n\n\n\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\n\n\n\n\n\n\n\n\n\nviewof furnInBTU = Inputs.range([20000, 200000],{\n  label: \"System BTU/h\",\n  value: 80000,\n  step: 1000\n});\n\n\n\n\n\n\n\n\n\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"System Efficiency\",\n  value: .80,\n  step: .01,\n  style: \"percent\",\n  width: 80\n});\n\n\n\n\n\n\n\n\n\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nacCFM = acInfo.tonsAcSel * acInfo.cfmPerTonSel;\nnofurnCFM = 0;\nminfTAc = acCFM / 2;\nminrDAc = (acCFM / 4.86);\nminsDAc = acCFM / 6.5;\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta)\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\n\n\n\n\n\n\n\nminSysCFM = \n{\n  if(acCFM &gt; furnMinCFM) { \n    return acCFM\n  } else { \n    return furnMinCFM\n  }\n};\n\n\n\n\n\n\n\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#minimum-system-cfm-filter-and-duct-sizes",
    "href": "ductSizingall.html#minimum-system-cfm-filter-and-duct-sizes",
    "title": "Trunk Duct Sizing",
    "section": "#### Minimum System CFM, Filter, and Duct Sizes",
    "text": "#### Minimum System CFM, Filter, and Duct Sizes\n\nmd`##### Minimum CFM: ${(minSysCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nmd`##### Minimum 1\" Filter Area: ${(minfTA1).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum 2\"-5\" Filter Area: ${(minfTA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Return Area: ${(minrDA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Supply Area: ${(minsDA).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#minimum-heating-cfm-filter-and-duct-sizes",
    "href": "ductSizingall.html#minimum-heating-cfm-filter-and-duct-sizes",
    "title": "Trunk Duct Sizing",
    "section": "#### Minimum Heating CFM, Filter, and Duct Sizes",
    "text": "#### Minimum Heating CFM, Filter, and Duct Sizes\n\nmd`##### Furnace Efficiency: ${(furnEff).toLocaleString(undefined, {style: \"percent\"})}`;\n\n\n\n\n\n\n\nmd`##### Furnace Output Btu/h: ${(furnOutBTU).toLocaleString(undefined, {maximumFractionDigits: 0})} BTU/h`;\n\n\n\n\n\n\n\nmd`##### Furnace Max Delta: ${furnMaxDelta}${tex`\\degree`}F ${tex`\\Delta`}T`;\n\n\n\n\n\n\n\nmd`##### Furnace Minimum CFM: ${(furnMinCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nmd`##### Minimum Heating Filter Area: ${(minfTAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Return Area: ${(minrDAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Supply Area: ${(minsDAh).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\n\nMinimum Air Conditioner CFM, Filter, and Duct Sizes\n\nmd`##### Minimum AC CFM: ${acCFM} cfm`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Filter Area: ${(minfTAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Return Area: ${(minrDAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;\n\n\n\n\n\n\n\nmd`##### Minimum Cooling Supply Area: ${(minsDAc).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.`;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#filters",
    "href": "ductSizingall.html#filters",
    "title": "Trunk Duct Sizing",
    "section": "Filters",
    "text": "Filters\n\nviewof filterThickness = Inputs.radio([1, 2, 4, 5], {label: \"Select Filter Thickness\", value: 2})\n\n\n\n\n\n\n\nFilter Area\n\nf1A = f1W * f1H; \nf2A = f2W * f2H; \nf3A = f3W * f3H; \nfT = f3A + f2A + f1A; \nfTcfmMax = fT * 2; \nfTcfmRec = fT * 1.5;\nfTdA = (acCFM / 2) - fT;\nfV = minSysCFM / (fT / 144)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof f1W = Inputs.number([0, 60],{\n  label: \"Filter 1 Width\",\n  width: 75,\n  value: 16,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f1H = Inputs.number([0, 60],{\n  label: \"Filter 1 Height\",\n  width: 75,\n  value: 25,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 1 Area ${f1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof f2W = Inputs.number([0, 60],{\n  label: \"Filter 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f2H = Inputs.number([0, 60],{\n  label: \"Filter 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 2 Area ${f2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof f3W = Inputs.number([0, 60],{\n  label: \"Filter 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof f3H = Inputs.number([0, 60],{\n  label: \"Filter 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Filter 3 Area ${f3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nFilters Report\n\n\n\n\nTotal Filter Area\n\nmd`  ${fT} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${fTcfmMax}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${fTcfmRec}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${fTdA}sq. in.`;\n\n\n\n\n\n\n\n\n\nmd`#### Filter Face Velocity:   ${(fV).toLocaleString(undefined, {maximumFractionDigits: 0})} feet per minute`;\n\n\n\n\n\n\n\nfP1d = (((fV - 75) / 75)) * .07\nfP2d = (((fV - 75) / 75)) * .045\nfP4d = (((fV - 75) / 75)) * .04\nfP5d = (((fV - 75) / 75)) * .03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEstimated Pressure Drop Based on Filter Thickness\n\n\n\nmd`#### 1\" Filter Pressure Drop:  ${(fP1d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\nmd`#### 2\" Filter Pressure Drop:  ${(fP2d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\nmd`#### 4\" Filter Pressure Drop:  ${(fP4d).toLocaleString(undefined, {maximumFractionDigits: 3})} iwc`;\n\n\n\n\n\n\n\n\n\n\nNote: Filter Pressure drop numbers are estimates only based on an approximate average for MERV 8 to MERV 11 filters. Please refer to pressure drop charts for actual filter installed to ensure accuracy.",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#return-ducts",
    "href": "ductSizingall.html#return-ducts",
    "title": "Trunk Duct Sizing",
    "section": "Return Ducts",
    "text": "Return Ducts\n\nReturn Duct Area\n\nrD1A = rD1W * rD1H; \nrD2A = rD2W * rD2H; \nrD3A = rD3W * rD3H; \nrDT = rD4A + rD5A + rD6A + rD3A + rD2A + rD1A; \nrDTcfmMax = rDT * 4.5; \nrDTcfmRec = rDT * 3;\nrDTdA = (acCFM / 3) - rDT;\nrD4dr = rD4d / 2\nrD5dr = rD5d / 2\nrD6dr = rD6d / 2\nrD4A = rD4dr * rD4dr * pi\nrD5A = rD5dr * rD5dr * pi\nrD6A = rD6dr * rD6dr * pi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof rD1W = Inputs.number([0, 60],{\n  label: \"Return Duct 1 Width\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD1H = Inputs.number([0, 60],{\n  label: \"Return Duct 1 Height\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 1 Area ${rD1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD2W = Inputs.number([0, 60],{\n  label: \"Return Duct 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD2H = Inputs.number([0, 60],{\n  label: \"Return Duct 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 2 Area ${rD2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD3W = Inputs.number([0, 60],{\n  label: \"Return Duct 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof rD3H = Inputs.number([0, 60],{\n  label: \"Return Duct 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 3 Area ${rD3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD4d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 4 Diameter\",\n  value: 12,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 4 Area ${(rD4A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD5d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 5 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 5 Area ${(rD5A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof rD6d = Inputs.range([0, 60],{\n  label: \"Round Return Duct 6 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Return Duct 6 Area ${(rD6A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nReturn Ducts Report\n\n\n\n\nTotal Return Duct Area\n\nmd`  ${(rDT).toLocaleString(undefined, {maximumFractionDigits: 0})} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${(rDTcfmMax).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${(rDTcfmRec).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${(rDTdA).toLocaleString(undefined, {maximumFractionDigits: 0})}sq. in.`;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#supply-ducts",
    "href": "ductSizingall.html#supply-ducts",
    "title": "Trunk Duct Sizing",
    "section": "Supply Ducts",
    "text": "Supply Ducts\n\nSupply Duct Area\n\nsD1A = sD1W * sD1H; \nsD2A = sD2W * sD2H; \nsD3A = sD3W * sD3H; \nsDT = sD4A + sD5A + sD6A + sD3A + sD2A + sD1A; \nsDTcfmMax = sDT * 6; \nsDTcfmRec = sDT * 4.5;\nsDTdA = (acCFM / 4.5) - sDT;\nsD4dr = sD4d / 2\nsD5dr = sD5d / 2\nsD6dr = sD6d / 2\nsD4A = sD4dr * sD4dr * pi\nsD5A = sD5dr * sD5dr * pi\nsD6A = sD6dr * sD6dr * pi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof sD1W = Inputs.number([0, 60],{\n  label: \"Supply Duct 1 Width\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD1H = Inputs.number([0, 60],{\n  label: \"Supply Duct 1 Height\",\n  width: 75,\n  value: 10,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 1 Area ${sD1A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD2W = Inputs.number([0, 60],{\n  label: \"Supply Duct 2 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD2H = Inputs.number([0, 60],{\n  label: \"Supply Duct 2 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 2 Area ${sD2A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD3W = Inputs.number([0, 60],{\n  label: \"Supply Duct 3 Width\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nviewof sD3H = Inputs.number([0, 60],{\n  label: \"Supply Duct 3 Height\",\n  width: 75,\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 3 Area ${sD3A} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD4d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 4 Diameter\",\n  value: 12,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 4 Area ${(sD4A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD5d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 5 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 5 Area ${(sD5A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nviewof sD6d = Inputs.range([0, 60],{\n  label: \"Round Supply Duct 6 Diameter\",\n  value: 0,\n  step: 0.5\n});\n\n\n\n\n\n\n\n\n\nmd`**Supply Duct 6 Area ${(sD6A).toLocaleString(undefined, {maximumFractionDigits: 2})} sq in**`;\n\n\n\n\n\n\n\n\n\n\n\nSupply Ducts Report\n\n\n\n\nTotal Supply Duct Area\n\nmd`  ${(sDT).toLocaleString(undefined, {maximumFractionDigits: 0})} sq in`;\n\n\n\n\n\n\n\n\nMaximum CFM\n\nmd`  ${(sDTcfmMax).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nRecommended CFM\n\nmd`  ${(sDTcfmRec).toLocaleString(undefined, {maximumFractionDigits: 0})}cfm`;\n\n\n\n\n\n\n\n\nDeficient Area\n\nmd`  ${(sDTdA).toLocaleString(undefined, {maximumFractionDigits: 0})}sq. in.`;",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "ductSizingall.html#instructions",
    "href": "ductSizingall.html#instructions",
    "title": "Trunk Duct Sizing",
    "section": "Instructions",
    "text": "Instructions\n\nSelect System Tonnage\nSelect Desired CFM per Ton for Air Conditioning\n\n350 cfm per ton is recommended for humid climates (all states east of the Mississippi and the Pacific Coast) or if necessary cfm per ton is unknown\n400 cfm per ton is recommended for non-coastal Midwest and Western US\n450 cfm per ton may be used for more arid climates like Arizona, Nevada, Colorado, etc\nA map will be available to make choosing necessary cfm per ton easier in future updates\n\nIf Gas Heat -\n\nCheck box next to Furnace to indicate calculations should also utilize furnace CFM\nSelect Furnace Input BTU and Efficiency\nInput max temperature rise across durnace if known (if unknown, 50\\(\\Delta\\)T recommended$)",
    "crumbs": [
      "Home",
      "Tools",
      "System Duct Sizing"
    ]
  },
  {
    "objectID": "filterSizingdeprecated.html",
    "href": "filterSizingdeprecated.html",
    "title": "Filter Sizing",
    "section": "",
    "text": "Important\n\n\n\nPlease see Instructions and Information Regarding Duct Sizing Tools if you do not know how to use this calculator\n\n\n\n\n\nviewof acInfo = Inputs.form({\n  tonsAcSel: Inputs.radio([325, 350, 375, 400, 425, 450], {label: \"Select CFM per Ton\", value: 350\n  }),\n  cfmPerTonSel: Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n});\n//AC CFM Formula\nacCfm = (acInfo.cfmPerTonSel * acInfo.tonsAcSel);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Show CFM\nmd`${acCfm} cfm total AC`\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"});\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\";\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\nnofurnCFM = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Furnace Input BTU\nviewof furnInBTU = Inputs.number([20000, 200000],{\n  label: \"Furnace Input BTU/h\",\n  value: 80000,\n  step: 1000,\n  width: 100\n});\n\n\n\n\n\n\n\n\n\n//Furnace Efficiency\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"Furnace Efficiency\",\n  value: .80,\n  step: .01,\n  width: 100\n});\n\n\n\n\n\n\n\n\n\n//Furnace Delta\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\n//Return Furnace CFM is being considered in calculations \nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta);\nmd`Furnace Minimum CFM: ${(furnMinCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Return Design CFM being used for Calculations\nmd`Minimum CFM: ${(minSysCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nFilter Thickness\n\nviewof filterThickness = Inputs.select([1, 2, 4, 5], {label: \"Select Filter Thickness\", value: 2, width: 75})\n\n\n\n\n\n\n\nminfTAc = acCfm / 2;\nminrDAc = (acCfm / 4.86);\nminsDAc = acCfm / 6.5;\n//Minimum Duct and Filter Sizes for Heating\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\n//Filter Totals\nfTcfmMax = fT * 2; \nfT = f3A + f2A + f1A;\n//Minimum Duct and Filter Sizes Based on Design CFM\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;\n//Mathematical constants\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\nminSysCFM = \n{\n  if(acCfm &gt; furnMinCFM) { \n    return acCfm\n  } else { \n    return furnMinCFM\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Filter Width Inputs\nviewof filtW = Inputs.form({\n    f1w: Inputs.number([0, 60],{label: \"Filter 1 Width\", width: 75, value: 16}),\n    f2w: Inputs.number([0, 60],{label: \"Filter 2 Width\", width: 75, value: 0}),\n    f3w: Inputs.number([0, 60],{label: \"Filter 2 Width\", width: 75, value: 0})\n});\n\n\n\n\n\n\n\n\n\n//Filter Height Inputs\nviewof filtH = Inputs.form({\n    f1h: Inputs.number([0, 60],{label: \"Filter 1 Height\", width: 75, value: 20}),\n    f2h: Inputs.number([0, 60],{label: \"Filter 2 Height\", width: 75, value: 0}),\n    f3h: Inputs.number([0, 60],{label: \"Filter 3 Height\", width: 75, value: 0})\n});\n\n\n\n\n\n\n\n\n\nf1A = filtW.f1w * filtH.f1h;\nf2A = filtW.f2w * filtH.f2h;\nf3A = filtW.f3w * filtH.f3h;\nviewof filtA = Inputs.form({\n    f1aR: Inputs.number({value: f1A, disabled: true, label: \"Filter 1 Area\", width: 75}),\n    f2aR: Inputs.number({value: f2A, disabled: true, label: \"Filter 2 Area\", width: 75}),\n    f3aR: Inputs.number({value: f3A, disabled: true, label: \"Filter 3 Area\", width: 75})\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Show Total Filter Area\nmd`  ${fT} sq in`;\n\n\n\n\n\n\n\n\n\n\n//Show Maximum CFM Based on Filter Area\nmd`  ${fTcfmMax}cfm`;",
    "crumbs": [
      "Home",
      "WIP"
    ]
  },
  {
    "objectID": "filterSizingdeprecated.html#system-information",
    "href": "filterSizingdeprecated.html#system-information",
    "title": "Filter Sizing",
    "section": "",
    "text": "Important\n\n\n\nPlease see Instructions and Information Regarding Duct Sizing Tools if you do not know how to use this calculator\n\n\n\n\n\nviewof acInfo = Inputs.form({\n  tonsAcSel: Inputs.radio([325, 350, 375, 400, 425, 450], {label: \"Select CFM per Ton\", value: 350\n  }),\n  cfmPerTonSel: Inputs.radio([1.5, 2, 2.5, 3, 3.5, 4, 5], {label: \"Select Tons\", value: 3})\n});\n//AC CFM Formula\nacCfm = (acInfo.cfmPerTonSel * acInfo.tonsAcSel);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Show CFM\nmd`${acCfm} cfm total AC`\n\n\n\n\n\n\n\n\nviewof furn = Inputs.toggle({label: \"Furnace\"});\nyesfurn = \"Gas Heating CFM will be Calculated\"\nnofurn = \"Gas Heating CFM will be set to Zero - Only AC CFM will be Used\";\nfurnTrue = \n{\n  if(furn == true) { \n    return yesfurn\n  } else { \n    return nofurn\n  }\n};\nnofurnCFM = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Furnace Input BTU\nviewof furnInBTU = Inputs.number([20000, 200000],{\n  label: \"Furnace Input BTU/h\",\n  value: 80000,\n  step: 1000,\n  width: 100\n});\n\n\n\n\n\n\n\n\n\n//Furnace Efficiency\nviewof furnEff = Inputs.number([.60, 1.00],{\n  label: \"Furnace Efficiency\",\n  value: .80,\n  step: .01,\n  width: 100\n});\n\n\n\n\n\n\n\n\n\n//Furnace Delta\nviewof furnMaxDelta = Inputs.radio([30, 35, 40, 45, 50, 55, 60, 65], {\n  label: \"Furnace Max Temperature Rise\", \n  value: 50\n});\n\n\n\n\n\n\n\n//Return Furnace CFM is being considered in calculations \nmd`*Note: ${furnTrue}*`;\n\n\n\n\n\n\n\nfurnOutBTU = furnInBTU * furnEff;\nheatCFM = furnOutBTU / (1.08 * furnMaxDelta);\nmd`Furnace Minimum CFM: ${(furnMinCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Return Design CFM being used for Calculations\nmd`Minimum CFM: ${(minSysCFM).toLocaleString(undefined, {maximumFractionDigits: 0})} CFM`;\n\n\n\n\n\n\n\nFilter Thickness\n\nviewof filterThickness = Inputs.select([1, 2, 4, 5], {label: \"Select Filter Thickness\", value: 2, width: 75})\n\n\n\n\n\n\n\nminfTAc = acCfm / 2;\nminrDAc = (acCfm / 4.86);\nminsDAc = acCfm / 6.5;\n//Minimum Duct and Filter Sizes for Heating\nminfTAh = furnMinCFM / 2;\nminrDAh = (furnMinCFM / 4.86);\nminsDAh = furnMinCFM / 6.5;\n//Filter Totals\nfTcfmMax = fT * 2; \nfT = f3A + f2A + f1A;\n//Minimum Duct and Filter Sizes Based on Design CFM\nminfTA = minSysCFM / (300 / 144);\nminfTA1 = minSysCFM / (225 / 144);\nminrDA = (minSysCFM / 4.86);\nminsDA = minSysCFM / 6.5;\n//Mathematical constants\npi = 3.141\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfurnMinCFM = \n{\n  if(furn == true) { \n    return heatCFM\n  } else { \n    return nofurnCFM\n  }\n};\nminSysCFM = \n{\n  if(acCfm &gt; furnMinCFM) { \n    return acCfm\n  } else { \n    return furnMinCFM\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Filter Width Inputs\nviewof filtW = Inputs.form({\n    f1w: Inputs.number([0, 60],{label: \"Filter 1 Width\", width: 75, value: 16}),\n    f2w: Inputs.number([0, 60],{label: \"Filter 2 Width\", width: 75, value: 0}),\n    f3w: Inputs.number([0, 60],{label: \"Filter 2 Width\", width: 75, value: 0})\n});\n\n\n\n\n\n\n\n\n\n//Filter Height Inputs\nviewof filtH = Inputs.form({\n    f1h: Inputs.number([0, 60],{label: \"Filter 1 Height\", width: 75, value: 20}),\n    f2h: Inputs.number([0, 60],{label: \"Filter 2 Height\", width: 75, value: 0}),\n    f3h: Inputs.number([0, 60],{label: \"Filter 3 Height\", width: 75, value: 0})\n});\n\n\n\n\n\n\n\n\n\nf1A = filtW.f1w * filtH.f1h;\nf2A = filtW.f2w * filtH.f2h;\nf3A = filtW.f3w * filtH.f3h;\nviewof filtA = Inputs.form({\n    f1aR: Inputs.number({value: f1A, disabled: true, label: \"Filter 1 Area\", width: 75}),\n    f2aR: Inputs.number({value: f2A, disabled: true, label: \"Filter 2 Area\", width: 75}),\n    f3aR: Inputs.number({value: f3A, disabled: true, label: \"Filter 3 Area\", width: 75})\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Show Total Filter Area\nmd`  ${fT} sq in`;\n\n\n\n\n\n\n\n\n\n\n//Show Maximum CFM Based on Filter Area\nmd`  ${fTcfmMax}cfm`;",
    "crumbs": [
      "Home",
      "WIP"
    ]
  },
  {
    "objectID": "filterSizingdeprecated.html#filter-performance-report",
    "href": "filterSizingdeprecated.html#filter-performance-report",
    "title": "Filter Sizing",
    "section": "Filter Performance Report",
    "text": "Filter Performance Report\n\nfiltPerfGrade = \n{\n  if(fV &gt;= 500) { \n    return (\"Worst - Additional Filters Required\")\n  }\n    else if(filtExcessVelocity &gt;= 85) { \n      return (\"Poor\")\n  } else if(filtExcessVelocity &gt;= 30) { \n      return (\"Average\")\n  } else if(filtExcessVelocity &gt;= 3) { \n      return (\"Good\")\n  } else { \n    return (\"Excellent\")\n  }\n};\nmd`### Filter Performance Based on Velocity:  **${filtPerfGrade}**`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmd`#### Air Velocity at Filter:  **${(fV).toLocaleString(undefined, {maximumFractionDigits: 0})} FPM**`\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nExcess filter velocity reduces performace of the filter (over 500 fpm for most filters and the filter will not trap dirt at its MERV Rating) and cause dirt to build up around grilles and ducts faster than average.\n\n\n\nfV = minSysCFM / (fT / 144)\n\n\n\n\n\n\n\nSummary\n\nmd`**Air Velocity at Filter:  ${(fV).toLocaleString(undefined, {maximumFractionDigits: 0})} FPM**`\n\n\n\n\n\n\n\nfiltExcessVelocity = \n{\n  if(filterThickness == 1) { \n    return (fV - 225)\n  } else { \n    return (fV - 300)\n  }\n}\n\n\n\n\n\n\n\nmd`**Air Velocity Over Recommended: ${(filtExcessVelocity).toLocaleString(undefined, {maximumFractionDigits: 0})} FPM**`\n\n\n\n\n\n\n\nfP1d = (((fV - 75) / 75)) * .07;\nfP2d = (((fV - 75) / 75)) * .045;\nfP4d = (((fV - 75) / 75)) * .04;\nfP5d = (((fV - 75) / 75)) * .03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npDeltaEstimate = \n{\n  if(filterThickness == 1) { \n    return (fP1d)\n  } else if(filterThickness == 2) { \n      return (fP2d)\n  } else if(filterThickness == 3) { \n      return (fP4d)\n  } else { \n    return (fP5d)\n  }\n}\n\n\n\n\n\n\n\nmd`**Estimated Filter Pressure Drop:   ${(pDeltaEstimate).toLocaleString(undefined, {maximumFractionDigits: 3})} in. w.c.**`\n\n\n\n\n\n\n\naddFilterArea = \n{\n  if(filterThickness == 1) { \n    return (minfTA1 - fT)\n  } else { \n    return (minfTA - fT)\n  }\n};\n\n\n\n\n\n\n\nfiltPerfGradePd = \n{\n  if(pDeltaEstimate &gt;= 0.3) { \n    return (\"Worst - Low System Efficiency\")\n  }\n    else if(pDeltaEstimate &gt;= 0.22) { \n      return (\"Poor\")\n  } else if(pDeltaEstimate &gt;= 0.15) { \n      return (\"Average\")\n  } else if(pDeltaEstimate &gt;= 0.1) { \n      return (\"Good\")\n  } else { \n    return (\"Excellent\")\n  }\n}\n\n\n\n\n\n\n\nmd`### Filter Performance Based on Pressure Drop: ${filtPerfGradePd}`\n\n\n\n\n\n\n\nmd`#### Estimated Filter Pressure Drop: **${(pDeltaEstimate).toLocaleString(undefined, {maximumFractionDigits: 3})} in. w.c.**`\n\n\n\n\n\n\n\n\n\n\n\n\nExcess pressure drop over about 0.1 in. wc. will generally mean that the system ductwork will not perform as intended. This is because most residential ducted systems are designed with a default of 0.1 in. w.c. across the filter. If filter pressure drop estimate exceeds 0.2 in w.c. a “hoghair” or otherwise very basic filter should be used or additional/larger filters installed as soon as possible.\nExcess pressure drop will also cause either (A) lower airflow in the system and/or (B) increased energy usage by the fan which will increase energy bills and reduce the lifetime of the fan motor.\n\n\n\n\nmd`**Additional Filter Area Recommended:  ${(addFilterArea).toLocaleString(undefined, {maximumFractionDigits: 0})} sq. in.**`\n\n\n\n\n\n\n\nsqFiltSize = Math.sqrt(addFilterArea)\nmd`**Additional Square Filter Size:  ${(sqFiltSize).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x ${(sqFiltSize).toLocaleString(undefined, {maximumFractionDigits: 0})}\" **`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSome Equivalent Rectangular Filter Sizes\n\nmd`8\" Wide Filter:  ${(addFilterArea / 8).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 8\"`\n\n\n\n\n\n\n\nmd`10\" Wide Filter:  ${(addFilterArea / 10).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 10\"`\n\n\n\n\n\n\n\nmd`12\" Wide Filter:  ${(addFilterArea / 12).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 12\"`\n\n\n\n\n\n\n\nmd`14\" Wide Filter:  ${(addFilterArea / 14).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 14\"`\n\n\n\n\n\n\n\nmd`16\" Wide Filter:  ${(addFilterArea / 16).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 16\"`\n\n\n\n\n\n\n\nmd`18\" Wide Filter:  ${(addFilterArea / 18).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 18\"`\n\n\n\n\n\n\n\nmd`20\" Wide Filter:  ${(addFilterArea / 20).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 20\"`\n\n\n\n\n\n\n\nmd`22\" Wide Filter:  ${(addFilterArea / 22).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 22\"`\n\n\n\n\n\n\n\nmd`24\" Wide Filter:  ${(addFilterArea / 24).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 24\"`\n\n\n\n\n\n\n\nmd`25\" Wide Filter:  ${(addFilterArea / 25).toLocaleString(undefined, {maximumFractionDigits: 0})}\" x 25\"`",
    "crumbs": [
      "Home",
      "WIP"
    ]
  }
]